
#Export in shell : (already saved in path)
export PATH="$HOME/riot_workplace/esp/xtensa-esp8266-elf/bin:$PATH"
export ESP8266_RTOS_SDK_DIR=$HOME/riot_workplace/esp/ESP8266_RTOS_SDK

#Generic build and excute :
make BOARD=esp8266-esp-12x PROGRAMMER_SPEED=9600
**press reset just before flashing**
make term BOARD=esp8266-esp-12x

#Build and excute for gnrc networking :
make
CFLAGS='-DESP_WIFI_SSID=\"AndroidAPE507\" -DESP_WIFI_PASS=\"msgs1234\" -DESP_WIFI_MAX_CONN=2'  make flash
make term

#Ping to RIOT from Linux console :
ping fe80::ae0b:fbff:fed6:d60c%wlp2s0
nc -6uv fe80::ae0b:fbff:fed6:d60c%wlp2s0 8808

#From RIOT msg to Linux :
udp server start 8808
udp send fe80::8ed0:a49:6177:fa7f 8808 testmessage


#Install socat :
sudo apt-get install socat
# When Package Received UDP IpV6 at port 8808 
# Forward the Package to UDP IpV4 at port 8809
socat UDP6-RECVFROM:8808,fork UDP4-SENDTO:localhost:8809

#Red light filter :
redshift -x
pgrep redshift | xargs -n1 kill -9




/home/angela/riot_workplace/RIOT/dist/tools/esptool/esptool.py 
--chip esp8266 --port /dev/ttyUSB0 --baud 9600 --before default_reset write_flash -z --flash_mode dout
--flash_freq 26m    0x0000 /home/angela/riot_workplace/RIOT/cpu/esp8266/bin/bootloader.bin 0x8000 
/home/angela/riot_workplace/RIOT/examples/hello-world/bin/esp8266-esp-12x/partitions.bin 0x10000 
/home/angela/riot_workplace/RIOT/examples/hello-world/bin/esp8266-esp-12x/hello-world.elf.bin


> nib route help
2022-05-26 17:09:56,971 #  nib route help
2022-05-26 17:09:56,974 # usage: nib route [show|add|del|help]
2022-05-26 17:09:56,982 #        nib route add <iface> <prefix>[/<prefix_len>] <next_hop> [<ltime in sec>]
2022-05-26 17:09:56,985 #        nib route del <iface> <prefix>[/<prefix_len>]
2022-05-26 17:09:56,990 #        nib route show [iface]
> 

| socket buffer result |
socket := Socket newUDP setPort: self 8808; yourself.
buffer := String new: 256.
socket waitForData.
result := socket receiveUDPDataInto: buffer.
